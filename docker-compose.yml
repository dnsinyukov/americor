version: '3.9'

services:
  app:
      container_name: app
      build:
          context: ./
          dockerfile: ./.docker/php/Dockerfile
      restart: unless-stopped
      tty: true
      volumes:
          - ./:/var/www
      networks:
          - app-network
  nginx:
      container_name: nginx
      image: nginx:alpine
      ports:
          - "80:80"
          - "8080:8080"
      volumes:
          - ./.docker/nginx/nginx.conf:/etc/nginx/nginx.conf
          - ./.docker/nginx/conf/local:/etc/nginx/conf.d/
          - ./.docker/nginx/logs:/var/log/nginx
          - ./:/var/www
      restart: unless-stopped
      depends_on:
          - app
      networks:
          - app-network

  database:
      container_name: db
      image: mysql:8.0.32
      volumes:
          - db:/var/lib/mysql
      command:
        --max_allowed_packet=250M
        --character-set-server=utf8mb4
        --collation-server=utf8mb4_unicode_ci
      environment:
          - MYSQL_DATABASE=${DB_DATABASE}
          - MYSQL_USER=${DB_USERNAME}
          - MYSQL_PASSWORD=${DB_PASSWORD}
          - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      ports:
          - ${DB_PORT}:3306
      restart: unless-stopped
      networks:
          - app-network
  adminer:
      container_name: adminer
      image: adminer:latest
      ports:
          - "8082:8080"
      links:
          - database:db
      environment:
          ADMINER_DEFAULT_SERVER: mysql
          ADMINER_PLUGINS: 'tables-filter sql-log'
      restart: unless-stopped
      networks:
          - app-network

networks:
    app-network:
        driver: bridge
volumes:
    db:
        driver: local
